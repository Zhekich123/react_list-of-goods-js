{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","goods","setGoods","activeSort","setActiveSort","isReversed","setIsReversed","alphabeticaly","length","reverse","isSorted","handleSort","sortType","sortFunctions","sortedGoods","sort","a","b","localeCompare","sensitivity","byLength","reversedGoods","reset","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAoCF,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEMC,EAAgB,gBAChBC,EAAS,WACTC,EAAU,UACVC,EAA0B,OAAfP,EAEXQ,EAAa,SAACC,GAClB,IAAMC,EAAgB,CACpBN,cAAe,WACb,IAAMO,EACF,YAAIb,GAAOc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE,GAAGE,cAAcD,EAAE,GAC/C,KAAM,CAAEE,YAAa,QADL,IAGpBjB,EAASY,GACTV,EAAcQ,GACdN,GAAc,EACf,EACDc,SAAU,WACR,IAAMN,EAAc,YAAIb,GAAOc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAER,OAASS,EAAET,MAAvB,IAEpCN,EAASY,GACTV,EAAcQ,GACdN,GAAc,EACf,EACDG,QAAS,WACP,IAAMY,EAAgB,YAAIpB,GAAOQ,UAEjCP,EAASmB,GACTjB,EAAcQ,GACdN,GAAeD,EAChB,EACDiB,MAAO,WACLpB,EAASJ,GACTM,EAAc,MACdE,GAAc,EACf,GAGCM,IAAaT,GAA4B,YAAbS,GAA0BP,EACxDQ,EAAcD,KAEdC,EAAa,OAEhB,EAED,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBpB,IAAeI,EAAgB,UAAY,YACxEkB,QAAS,kBAAMd,EAAWJ,EAAjB,EAHX,iCAQA,wBACEiB,KAAK,SACLD,UAAS,4BAAuBpB,IAAeK,EAAS,UAAY,YACpEiB,QAAS,kBAAMd,EAAWH,EAAjB,EAHX,4BAQA,wBACEgB,KAAK,SACLD,UAAS,4BAAuBpB,IAAeM,EAAU,UAAY,YACrEgB,QAAS,kBAAMd,EAAWF,EAAjB,EAHX,qBAQCC,EACC,wBACEc,KAAK,SACLD,UAAS,2BAAqC,UAAfpB,EAAyB,UAAY,YACpEsB,QAAS,kBAAMd,EAAW,QAAjB,EAHX,mBAOE,QAIN,6BACGV,EAAMyB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,EADI,QAOtB,EC9GDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.77fe04eb.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [activeSort, setActiveSort] = useState(null);\n  const [isReversed, setIsReversed] = useState(false);\n  const reset = 'reset';\n  const alphabeticaly = 'alphabeticaly';\n  const length = 'byLength';\n  const reverse = 'reverse';\n  const isSorted = activeSort !== null;\n\n  const handleSort = (sortType) => {\n    const sortFunctions = {\n      alphabeticaly: () => {\n        const sortedGoods\n          = [...goods].sort((a, b) => a[0].localeCompare(b[0],\n            'en', { sensitivity: 'base' }));\n\n        setGoods(sortedGoods);\n        setActiveSort(sortType);\n        setIsReversed(false);\n      },\n      byLength: () => {\n        const sortedGoods = [...goods].sort((a, b) => a.length - b.length);\n\n        setGoods(sortedGoods);\n        setActiveSort(sortType);\n        setIsReversed(false);\n      },\n      reverse: () => {\n        const reversedGoods = [...goods].reverse();\n\n        setGoods(reversedGoods);\n        setActiveSort(sortType);\n        setIsReversed(!isReversed);\n      },\n      reset: () => {\n        setGoods(goodsFromServer);\n        setActiveSort(null);\n        setIsReversed(false);\n      },\n    };\n\n    if (sortType !== activeSort || (sortType === 'reverse' && isReversed)) {\n      sortFunctions[sortType]();\n    } else {\n      sortFunctions[reset]();\n    }\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${activeSort === alphabeticaly ? 'is-info' : 'is-light'}`}\n          onClick={() => handleSort(alphabeticaly)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${activeSort === length ? 'is-info' : 'is-light'}`}\n          onClick={() => handleSort(length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${activeSort === reverse ? 'is-info' : 'is-light'}`}\n          onClick={() => handleSort(reverse)}\n        >\n          Reverse\n        </button>\n\n        {isSorted ? (\n          <button\n            type=\"button\"\n            className={`button is-danger ${activeSort === 'reset' ? 'is-info' : 'is-light'}`}\n            onClick={() => handleSort('reset')}\n          >\n            Reset\n          </button>\n        ) : null}\n\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}