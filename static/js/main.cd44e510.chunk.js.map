{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","alphabeticaly","length","reverse","App","useState","activeSort","setActiveSort","isReversed","setIsReversed","visibleGoods","goods","prepearedGoods","sort","a","b","localeCompare","sensitivity","handleSort","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAIIC,EAAgB,gBAChBC,EAAS,WACTC,EAAU,UAmCHC,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EApCW,SAACC,EAAD,GAAwC,IAA9BL,EAA6B,EAA7BA,WAAYE,EAAiB,EAAjBA,WACjCI,EAAc,YAAOD,GAE3B,OAAQL,GACN,KAAKL,EAOH,OANAW,EAAeC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE,GAAGE,cAAcD,EAAE,GACjD,KAAM,CAAEE,YAAa,QADH,IAEhBT,GACFI,EAAeT,UAGVS,EAET,KAAKV,EAMH,OALAU,EAAeC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEZ,OAASa,EAAEb,MAAvB,IAChBM,GACFI,EAAeT,UAGVS,EAET,KAAKT,EAKH,OAJKK,GACHI,EAAeT,UAGVS,EAET,QACE,OAAOD,EAEZ,CAKsBO,CAAWlB,EAAiB,CAAEM,aAAYE,eAE/D,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYf,IAAeL,IAE7BqB,QAAS,kBAAMf,EAAcN,EAApB,EALX,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYf,IAAeJ,IAE7BoB,QAAS,kBAAMf,EAAcL,EAApB,EALX,4BAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYf,IAAeH,IAAYK,IAEzCc,QAAS,WACPb,GAAeD,EAEhB,EARH,qBAaCF,EACC,wBACEc,KAAK,SACLD,UAAWE,IAAG,SAAU,YAAa,CACnC,WAnFA,UAmFYf,IAEdgB,QAAS,WACPf,EAAc,IACdE,GAAc,EACf,EARH,mBAYE,QAIN,6BACGC,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,EADW,QAO7B,ECvHDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.cd44e510.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst reset = 'reset';\nconst alphabeticaly = 'alphabeticaly';\nconst length = 'byLength';\nconst reverse = 'reverse';\n\nconst handleSort = (goods, { activeSort, isReversed }) => {\n  const prepearedGoods = [...goods];\n\n  switch (activeSort) {\n    case alphabeticaly:\n      prepearedGoods.sort((a, b) => a[0].localeCompare(b[0],\n        'en', { sensitivity: 'base' }));\n      if (isReversed) {\n        prepearedGoods.reverse();\n      }\n\n      return prepearedGoods;\n\n    case length:\n      prepearedGoods.sort((a, b) => a.length - b.length);\n      if (isReversed) {\n        prepearedGoods.reverse();\n      }\n\n      return prepearedGoods;\n\n    case reverse:\n      if (!isReversed) {\n        prepearedGoods.reverse();\n      }\n\n      return prepearedGoods;\n\n    default:\n      return goods;\n  }\n};\n\nexport const App = () => {\n  const [activeSort, setActiveSort] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = handleSort(goodsFromServer, { activeSort, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': activeSort !== alphabeticaly,\n          })}\n          onClick={() => setActiveSort(alphabeticaly)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': activeSort !== length,\n          })}\n          onClick={() => setActiveSort(length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': activeSort !== reverse && !isReversed,\n          })}\n          onClick={() => {\n            setIsReversed(!isReversed);\n            // setActiveSort(reverse);\n          }}\n        >\n          Reverse\n        </button>\n\n        {activeSort ? (\n          <button\n            type=\"button\"\n            className={cn('button', 'is-danger', {\n              'is-light': activeSort !== reset,\n            })}\n            onClick={() => {\n              setActiveSort('');\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        ) : null}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}