{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","goods","setGoods","activeSort","setActiveSort","isReversed","setIsReversed","reset","alphabeticaly","length","reverse","isSorted","handleSort","sortType","sortedGoods","sort","a","b","localeCompare","sensitivity","byLength","reversedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAoCF,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACMC,EAAQ,QACRC,EAAgB,gBAChBC,EAAS,WACTC,EAAU,UACVC,EAA0B,OAAfR,EAEXS,EAAa,SAACC,IAgCdA,IAAaV,GAA4B,YAAbU,GAA0BR,IA/BpC,CACpBG,cAAe,WACb,IAAMM,EACF,YAAIb,GAAOc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE,GAAGE,cAAcD,EAAE,GAC/C,KAAM,CAAEE,YAAa,QADL,IAGpBjB,EAASY,GACTV,EAAcS,GACdP,GAAc,EACf,EACDc,SAAU,WACR,IAAMN,EAAc,YAAIb,GAAOc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEP,OAASQ,EAAER,MAAvB,IAEpCP,EAASY,GACTV,EAAcS,GACdP,GAAc,EACf,EACDI,QAAS,WACP,IAAMW,EAAgB,YAAIpB,GAAOS,UAEjCR,EAASmB,GACTjB,EAAcS,GACdP,GAAeD,EAChB,EACDE,MAAO,WACLL,EAASJ,GACTM,EAAc,MACdE,GAAc,EACf,GAIaO,IAEjB,EAED,OACE,sBAAKS,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYrB,IAAeK,IAE7BiB,QAAS,kBAAMb,EAAWJ,EAAjB,EALX,iCAUA,wBACEe,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYrB,IAAeM,IAE7BgB,QAAS,kBAAMb,EAAWH,EAAjB,EALX,4BAUA,wBACEc,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYrB,IAAeO,IAE7Be,QAAS,kBAAMb,EAAWF,EAAjB,EALX,qBAUCC,EACC,wBACEY,KAAK,SACLD,UAAWE,IAAG,SAAU,YAAa,CACnC,WAAYrB,IAAeI,IAE7BkB,QAAS,kBAAMb,EAAWL,EAAjB,EALX,mBASE,QAIN,6BACGN,EAAMyB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,EADI,QAOtB,ECrHDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.967af15f.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [activeSort, setActiveSort] = useState(null);\n  const [isReversed, setIsReversed] = useState(false);\n  const reset = 'reset';\n  const alphabeticaly = 'alphabeticaly';\n  const length = 'byLength';\n  const reverse = 'reverse';\n  const isSorted = activeSort !== null;\n\n  const handleSort = (sortType) => {\n    const sortFunctions = {\n      alphabeticaly: () => {\n        const sortedGoods\n          = [...goods].sort((a, b) => a[0].localeCompare(b[0],\n            'en', { sensitivity: 'base' }));\n\n        setGoods(sortedGoods);\n        setActiveSort(sortType);\n        setIsReversed(false);\n      },\n      byLength: () => {\n        const sortedGoods = [...goods].sort((a, b) => a.length - b.length);\n\n        setGoods(sortedGoods);\n        setActiveSort(sortType);\n        setIsReversed(false);\n      },\n      reverse: () => {\n        const reversedGoods = [...goods].reverse();\n\n        setGoods(reversedGoods);\n        setActiveSort(sortType);\n        setIsReversed(!isReversed);\n      },\n      reset: () => {\n        setGoods(goodsFromServer);\n        setActiveSort(null);\n        setIsReversed(false);\n      },\n    };\n\n    if (sortType !== activeSort || (sortType === 'reverse' && isReversed)) {\n      sortFunctions[sortType]();\n    }\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': activeSort !== alphabeticaly,\n          })}\n          onClick={() => handleSort(alphabeticaly)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': activeSort !== length,\n          })}\n          onClick={() => handleSort(length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': activeSort !== reverse,\n          })}\n          onClick={() => handleSort(reverse)}\n        >\n          Reverse\n        </button>\n\n        {isSorted ? (\n          <button\n            type=\"button\"\n            className={cn('button', 'is-danger', {\n              'is-light': activeSort !== reset,\n            })}\n            onClick={() => handleSort(reset)}\n          >\n            Reset\n          </button>\n        ) : null}\n\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}